{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HoangN/Desktop/NW/LTC_GUI/base_ltc_clarity/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { listenForAttributeChange as t } from \"../utils/events.js\";\nimport { getActiveElement as s } from \"../utils/focus.js\";\nfunction e(t = {\n  focus: !0\n}) {\n  return s => s.addInitializer(s => new r(s, t));\n}\nclass r {\n  constructor(t, e = {\n    focus: !0\n  }) {\n    this.host = t, this.config = e, this.activeElement = s(), this.host.addController(this);\n  }\n  get current() {\n    return this.host.trigger ? this._current : this.activeElement;\n  }\n  get prev() {\n    return this._prev;\n  }\n  hostConnected() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.observer = t(_this.host, \"hidden\", () => {\n        const t = s();\n        !_this.host.hidden && t ? _this.activeElement = t : _this.focusCurrent();\n      });\n    })();\n  }\n  hostUpdate() {\n    this._current !== this.host.trigger && (this._prev = this._current, this._current = this.host.trigger ? this.host.trigger : this.activeElement);\n  }\n  hostDisconnected() {\n    var _this$observer;\n    this.focusCurrent(), (_this$observer = this.observer) === null || _this$observer === void 0 ? void 0 : _this$observer.disconnect();\n  }\n  focusCurrent() {\n    var _this$current;\n    this.config.focus && ((_this$current = this.current) === null || _this$current === void 0 ? void 0 : _this$current.focus());\n  }\n}\nexport { r as TriggerController, e as triggerable };\n//# sourceMappingURL=trigger.controller.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}