{"ast":null,"code":"import { render as e } from \"lit\";\nfunction r(e) {\n  return Promise.all(Array.from(e).map(e => e.updateComplete));\n}\nfunction n(e, r, n) {\n  e.forEach((e, o) => n.filter(e => e && void 0 !== e[o]).forEach(e => e[o] = r[o]));\n}\nfunction o(e, r, n) {\n  Object.keys(n).filter(e => n[e]).forEach(n => e[n] = r[n]);\n}\nfunction t(e, r, n) {\n  e.forEach(e => o(e, r, n));\n}\nfunction i(e, r, n) {\n  return r.has(n) && e[n] !== r.get(n);\n}\nfunction c(r, n, o) {\n  const t = document.createElement(\"div\");\n  n.prepend(t), e(r, n, {\n    renderBefore: t,\n    ...o\n  });\n  const i = t.previousSibling;\n  return t.remove(), i;\n}\nfunction f(r, n, o) {\n  const t = document.createElement(\"div\");\n  n.appendChild(t), e(r, n, {\n    renderBefore: t,\n    ...o\n  });\n  const i = t.previousSibling;\n  return t.remove(), i;\n}\nexport { r as childrenUpdateComplete, i as propUpdated, f as renderAfter, c as renderBefore, n as syncDefinedProps, o as syncProps, t as syncPropsForAllItems };\n//# sourceMappingURL=lit.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}