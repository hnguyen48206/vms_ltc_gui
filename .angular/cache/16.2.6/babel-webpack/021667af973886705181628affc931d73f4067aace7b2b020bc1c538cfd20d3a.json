{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HoangN/Desktop/NW/LTC_GUI/base_ltc_clarity/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getOffesetDifference as t } from \"../utils/math.js\";\nfunction e() {\n  return t => t.addInitializer(t => new s(t));\n}\nclass s {\n  constructor(t) {\n    this.host = t, this.moveHandler = this.move.bind(this), this.endHandler = this.end.bind(this), this.host.addController(this);\n  }\n  hostConnected() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.host.updateComplete, _this.host.addEventListener(\"pointerdown\", t => _this.start(t), {\n        passive: !0\n      });\n    })();\n  }\n  start(t) {\n    t.composedPath().find(t => t === this.host) && (this.startPosition = {\n      x: t.clientX,\n      y: t.clientY\n    }, document.addEventListener(\"pointerup\", this.endHandler, {\n      passive: !0\n    }), document.addEventListener(\"pointermove\", this.moveHandler, {\n      passive: !0\n    }), this.host.dispatchEvent(new CustomEvent(\"cdsTouchStart\", {\n      detail: {\n        ...this.startPosition\n      }\n    })));\n  }\n  end(t) {\n    if (this.startPosition) {\n      const e = this.getCoordinates(t);\n      document.removeEventListener(\"pointerup\", this.endHandler, !1), document.removeEventListener(\"pointermove\", this.moveHandler, !1), this.host.dispatchEvent(new CustomEvent(\"cdsTouchEnd\", {\n        detail: e\n      }));\n    }\n  }\n  move(t) {\n    requestAnimationFrame(() => {\n      const e = this.getCoordinates(t);\n      this.startPosition = {\n        x: t.clientX,\n        y: t.clientY\n      }, this.host.dispatchEvent(new CustomEvent(\"cdsTouchMove\", {\n        detail: e\n      }));\n    });\n  }\n  getCoordinates(e) {\n    return {\n      x: e.clientX,\n      y: e.clientY,\n      offsetX: t(this.startPosition.x, e.clientX),\n      offsetY: t(this.startPosition.y, e.clientY)\n    };\n  }\n}\nexport { s as TouchController, e as touch };\n//# sourceMappingURL=touch.controller.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}