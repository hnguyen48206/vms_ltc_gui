{"ast":null,"code":"import { html as t } from \"lit\";\nimport { ifDefined as e } from \"lit/directives/if-defined.js\";\nimport { stopEvent as i } from \"../utils/events.js\";\nimport { onAnyKey as s } from \"../utils/keycodes.js\";\nimport { renderAfter as o } from \"../utils/lit.js\";\nfunction r() {\n  return t => t.addInitializer(t => new h(t));\n}\nclass h {\n  constructor(t) {\n    this.host = t, this.triggerNativeButtonBehaviorHandler = this.triggerNativeButtonBehavior.bind(this), this.emulateKeyBoardEventBehaviorHandler = this.emulateKeyBoardEventBehavior.bind(this), this.host.addController(this);\n  }\n  hostUpdated() {\n    this.setButtonType(), this.setupNativeButtonBehavior();\n  }\n  setButtonType() {\n    !this.host.type && this.host.closest(\"form\") && (this.host.type = \"submit\");\n  }\n  setupNativeButtonBehavior() {\n    this.host.readonly || this.host.disabled ? (this.host.removeEventListener(\"click\", this.triggerNativeButtonBehaviorHandler), this.host.removeEventListener(\"keyup\", this.emulateKeyBoardEventBehaviorHandler)) : (this.host.addEventListener(\"click\", this.triggerNativeButtonBehaviorHandler), this.host.addEventListener(\"keyup\", this.emulateKeyBoardEventBehaviorHandler));\n  }\n  emulateKeyBoardEventBehavior(t) {\n    s([\"enter\", \"space\"], t, () => {\n      \"submit\" === this.host.type ? this.triggerNativeButtonBehavior(t) : this.host.click(), i(t);\n    });\n  }\n  triggerNativeButtonBehavior(s) {\n    if (this.host.disabled) i(s);else if (!s.defaultPrevented) {\n      const i = o(t`<button aria-hidden=\"true\" role=\"presentation\" ?disabled=\"${this.host.disabled}\" tabindex=\"-1\" style=\"display:none!important\" value=\"${e(this.host.value)}\" name=\"${e(this.host.name)}\" type=\"${e(this.host.type)}\"></button>`, this.host);\n      i !== null && i !== void 0 && i.dispatchEvent(new MouseEvent(\"click\", {\n        relatedTarget: this.host,\n        composed: !0\n      })), i === null || i === void 0 ? void 0 : i.remove();\n    }\n  }\n}\nexport { h as ButtonSubmitController, r as buttonSubmit };\n//# sourceMappingURL=button-submit.controller.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}