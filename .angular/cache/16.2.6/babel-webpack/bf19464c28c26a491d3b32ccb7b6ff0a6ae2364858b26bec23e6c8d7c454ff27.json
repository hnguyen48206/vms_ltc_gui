{"ast":null,"code":"import { isNilOrEmpty as t, isNumericString as n, getFromObjectPath as r } from \"./identity.js\";\nfunction e(t, n, ...r) {\n  return n.map(t => t(...r)).join(t).trim();\n}\nfunction u(t, ...n) {\n  return e(\" \", t, ...n);\n}\nfunction i(t, ...n) {\n  return e(\"\", t, ...n);\n}\nfunction c(t) {\n  return t.replace(/[A-Z]/g, t => \"-\" + t.toLowerCase());\n}\nfunction o(t) {\n  return t.split(\"-\").map((t, n) => n ? t.charAt(0).toUpperCase() + t.slice(1).toLowerCase() : t).join(\"\");\n}\nfunction f(t) {\n  return a(o(t));\n}\nfunction s(t) {\n  return l(Object.keys(t), t);\n}\nfunction p(t) {\n  return l(Object.keys(t).filter(t => t.startsWith(\"--\")), t);\n}\nfunction l(t, n) {\n  return t.reduce((t, r) => `${t}${n[r] ? `${r}:${n[r]};` : \"\"}`, \"\");\n}\nfunction a(t) {\n  return t.charAt(0).toUpperCase() + t.slice(1);\n}\nconst h = \"CSS Custom Properties\",\n  g = \"Default Properties\";\nfunction m(t) {\n  return k(t, \"s\");\n}\nfunction x(n, r, e = \"prefix\") {\n  return !t(r) && !t(n) && (\"prefix\" === e ? n.substr(0, r.length) : n.substr(-1 * r.length)) === r;\n}\nfunction b(t, n) {\n  return x(t, n, \"prefix\");\n}\nfunction j(t, n) {\n  return x(t, n, \"suffix\");\n}\nfunction C(n, r, e = \"prefix\") {\n  if (t(n)) return \"\";\n  if (t(r) || !x(n, r, e)) return n;\n  switch (e) {\n    case \"prefix\":\n      return n.substr(r.length);\n    case \"suffix\":\n      return n.substr(0, n.length - r.length);\n    default:\n      return n;\n  }\n}\nfunction $(t, n) {\n  return C(t, n, \"prefix\");\n}\nfunction d(t, n) {\n  return C(t, n, \"suffix\");\n}\nfunction w(t, n, r = \"\") {\n  const e = t.split(\" \"),\n    u = \"\" === r ? e.filter(t => t !== n) : e.map(t => t === n ? r : t);\n  return u.length > 0 ? u.join(\" \") : \"\";\n}\nfunction y(t) {\n  return t ? (t + \"\").trim().replace(/  +/g, \" \") : \"\";\n}\nfunction A(t) {\n  const n = y(t);\n  return \"\" === n ? [] : n.split(\" \");\n}\nfunction O(t, n, r) {\n  return r ? Object.assign(n, r(t)) : n;\n}\nfunction k(t, r) {\n  const e = t ? t.trim() : \"\";\n  if (\"\" === e || !e.endsWith(r)) return 0;\n  const u = e.slice(0, -1 * r.length);\n  return n(u) ? +u : 0;\n}\nfunction L(t) {\n  return t ? k(t.trim(), \"px\") : 0;\n}\nfunction P(t, n, e) {\n  return t.replace(/\\$\\{.+?\\}/g, t => {\n    const u = t.substr(2, t.length - 3).trim();\n    return r(u, n, e);\n  });\n}\nexport { c as camelCaseToKebabCase, a as capitalizeFirstLetter, O as convertStringPropertyToObjectConfig, h as cssGroup, m as getNumericValueFromCssSecondsStyleValue, P as interpolateNaively, b as isPrefixedBy, x as isPrefixedOrSuffixedBy, j as isSuffixedBy, o as kebabCaseToCamelCase, f as kebabCaseToPascalCase, L as pluckPixelValue, k as pluckValueFromStringUnit, g as propertiesGroup, $ as removePrefix, C as removePrefixOrSuffix, d as removeSuffix, w as replaceWord, p as setPropStyles, s as setStyles, A as transformSpacedStringToArray, u as transformToSpacedString, e as transformToString, i as transformToUnspacedString, y as trimExtraWhitespace };\n//# sourceMappingURL=string.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}