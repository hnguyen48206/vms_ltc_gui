{"ast":null,"code":"import { Positions as t } from \"./interfaces.js\";\nimport { transformSpacedStringToArray as e, removePrefix as o, capitalizeFirstLetter as n } from \"../utils/string.js\";\nimport { setAttributes as i, getWindowDimensions as r } from \"../utils/dom.js\";\nimport { isNil as s } from \"../utils/identity.js\";\nimport { updateElementStyles as p, getCssPropertyValue as f } from \"../utils/css.js\";\nimport { sumAndSubtract as u } from \"../utils/math.js\";\nimport { getEnumValueFromStringKey as c } from \"../utils/enum.js\";\nfunction a(t, e, o, n, i) {\n  const r = {\n      mainAxisOffset: 0,\n      crossAxisOffset: 0\n    },\n    p = o && \"default\" === o.type;\n  return s(t) ? p && (r.mainAxisOffset = -10) : r.mainAxisOffset = t, s(e) ? p && \"end\" === n && \"start\" === i && (r.crossAxisOffset = -10) : r.crossAxisOffset = e, r;\n}\nfunction l(t) {\n  t.removeAttribute(\"responsive\");\n  const e = a(t.mainAxisOffset, t.crossAxisOffset, t.pointer, t.pointerAlign, t.anchorAlign),\n    o = O(t.orientation, t.anchorRect, t.anchorAlign, t.pointer, t.pointerAlign, t.contentWrapper, e.mainAxisOffset, e.crossAxisOffset);\n  if (!1 === o) i(t, [\"responsive\", \"\"], [\"_position-at\", !1]), p(t.hostWrapper, [\"position\", \"\"], [\"top\", \"\"], [\"left\", \"\"]), p(t.pointerWrapper, [\"visibility\", \"hidden\"]);else {\n    if (t.pointer) {\n      const e = o.pointer;\n      p(t.pointerWrapper, [\"visibility\", \"visible\"]), i(t, [\"_pointer-type\", t.pointer.type || !1]), i(t, [\"_position-at\", e.location]);\n    } else p(t.pointerWrapper, [\"visibility\", \"hidden\"]), i(t, [\"_position-at\", !1], [\"_pointer-type\", !1]);\n    const e = o.popup.top + \"px\",\n      n = o.popup.left + \"px\";\n    p(t.hostWrapper, [\"position\", \"absolute\"], [\"top\", e], [\"left\", n]);\n  }\n}\nfunction h(i) {\n  const r = [],\n    s = [];\n  for (const p of e(i)) {\n    if (\"none\" === p) return [[], 0];\n    if (p.indexOf(\"only:\") > -1) return [[c(t, o(p, \"only:\"), n)], 0];\n    if (p.indexOf(\"not:\") > -1) s.push(c(t, o(p, \"not:\"), n));else {\n      const e = c(t, p, n);\n      s.push(e), r.push(e);\n    }\n  }\n  return [r, u(0, [t.All], s)];\n}\nfunction m(t) {\n  switch (t) {\n    case \"mid\":\n      return [1, 0, 2];\n    case \"end\":\n      return [2, 1, 0];\n    default:\n      return [0, 1, 2];\n  }\n}\nfunction d(e, o, n) {\n  var _t$e;\n  if (!1 === o) return !1;\n  const i = o[(_t$e = t[e]) === null || _t$e === void 0 ? void 0 : _t$e.toLowerCase()];\n  if (!i) return !1;\n  const [r, s, p] = i;\n  if (!1 === r && !1 === s && !1 === p) return !1;\n  for (const t of m(n)) if (i[t]) return Object.assign({}, i[t]);\n  return !1;\n}\nfunction g(e) {\n  const o = [t.Bottom, t.Right, t.Left, t.Top, t.Responsive];\n  for (const t of o) if (e >= t) return [t, e - t];\n  return [0, 0];\n}\nfunction b(e, o) {\n  if (e.length < 1) {\n    const [t, n] = g(o);\n    return [t, e, n];\n  }\n  return [e[0], e.slice(1), e[0] !== t.Responsive ? o : 0];\n}\nfunction w(t) {\n  switch (t.toLowerCase()) {\n    case \"top\":\n      return \"popup-bottom\";\n    case \"bottom\":\n      return \"popup-top\";\n    case \"left\":\n      return \"popup-right\";\n    default:\n      return \"popup-left\";\n  }\n}\nfunction x(t, e) {\n  let o;\n  return o = \"popup-bottom\" === t || \"popup-top\" === t ? {\n    start: \"pointer-left\",\n    mid: \"pointer-center\",\n    end: \"pointer-right\"\n  } : {\n    start: \"pointer-top\",\n    mid: \"pointer-mid\",\n    end: \"pointer-bottom\"\n  }, o[e];\n}\nfunction A(e, o, n) {\n  let [i, r] = o,\n    s = null;\n  for (; null === s;) {\n    const [o, p, f] = b(i, r),\n      u = d(o, e, n);\n    switch (!0) {\n      case !1 !== u:\n        s = Object.assign({}, u, {\n          pointer: {\n            location: w(t[o])\n          }\n        });\n        break;\n      case !1 === u && 0 === f:\n        s = !1;\n        break;\n      case !1 === u:\n        i = p, r = f;\n    }\n  }\n  return s;\n}\nfunction O(t, e, o, n, i, s, p, u) {\n  if (!e) return !1;\n  const c = n ? n.offsetHeight : 0,\n    a = r();\n  if (a.width <= parseInt(f(\"--cds-global-layout-width-xs-static\"), 10)) return !1;\n  const l = A(y(e, c, i, s.getBoundingClientRect(), a, p, u), h(t), o);\n  if (!1 === l) return !1;\n  const m = l.pointer.location,\n    d = m + \" \" + x(m, i);\n  return Object.assign({}, l, {\n    pointer: {\n      size: c,\n      location: d\n    }\n  });\n}\nfunction y(t, e, o, n, i, r, s) {\n  return {\n    top: j(\"top\", o, t, n, e, i, r, s),\n    right: j(\"right\", o, t, n, e, i, r, s),\n    bottom: j(\"bottom\", o, t, n, e, i, r, s),\n    left: j(\"left\", o, t, n, e, i, r, s)\n  };\n}\nfunction j(t, e, o, n, i, r, s, p) {\n  let f;\n  switch (t) {\n    case \"top\":\n      return f = L(o.top, i, n.height, s, 0), !1 !== f && C(o.left, o.width, n.width, p, 0, r.width, e).map(t => !1 !== t && {\n        popup: {\n          top: f,\n          left: t\n        }\n      });\n    case \"bottom\":\n      return f = L(o.bottom, 0, n.height, s, r.height), !1 !== f && C(o.left, o.width, n.width, p, 0, r.width, e).map(t => !1 !== t && {\n        popup: {\n          top: f,\n          left: t\n        }\n      });\n    case \"left\":\n      return f = L(o.left, i, n.width, s, 0), !1 !== f && C(o.top, o.height, n.height, p, 0, r.height, e).map(t => !1 !== t && {\n        popup: {\n          top: t,\n          left: f\n        }\n      });\n    case \"right\":\n      return f = L(o.right, 0, n.width, s, r.width), !1 !== f && C(o.top, o.height, n.height, p, 0, r.height, e).map(t => !1 !== t && {\n        popup: {\n          top: t,\n          left: f\n        }\n      });\n  }\n}\nfunction v(t, e, o, n, i) {\n  return 0 === i ? u(t, [], [e, o, n]) : u(t, [e, o, n], []);\n}\nfunction W(t, e, o) {\n  return 0 === o ? t > o && t : t < o && e;\n}\nfunction R(t, e, o, n, i, r = 0) {\n  switch (t) {\n    case \"mid\":\n      return e + o * n - .5 * r + i;\n    case \"end\":\n      return e + o * n - i;\n    case \"start\":\n      return e + o * n + i;\n  }\n}\nfunction _(t, e, o, n) {\n  const [i, r] = n;\n  switch (t) {\n    case \"mid\":\n      return e > i && e + o < r && e;\n    case \"end\":\n      {\n        const t = e - o;\n        return t > i && t;\n      }\n    case \"start\":\n      return e + o < r && e;\n  }\n}\nfunction C(t, e, o, n, i, r, s) {\n  return [0, .5, 1].map(p => _(s, R(s, t, p, e, n, o), o, [i, r]));\n}\nfunction L(t, e, o, n, i = 0) {\n  return W(v(t, e, o, n, i), t + n, i);\n}\nexport { d as checkNextPosition, A as getBestPositionForPreferences, m as getCrossAxisOrderOfPreference, R as getCrossAxisPosition, v as getMainAxisPosition, L as getMainAxisPositionOrViolation, g as getNextDefaultPosition, b as getNextPosition, h as getOrientationTuple, x as getPointerAlignment, w as getPointerPosition, a as getPopupOffsetOrDefaultOffsets, O as getPopupPosition, j as getPositionConfig, C as getPositionOrViolationFromCrossAxis, y as getPositions, l as setPopupPosition, _ as testCrossAxisPosition, W as testMainAxisPosition };\n//# sourceMappingURL=utils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}