{"ast":null,"code":"import { isBrowser as e } from \"./environment.js\";\nimport { getAngularVersion as n, getAngularJSVersion as o, getReactVersion as t, getVueVersion as i } from \"./framework.js\";\nimport { browserFeatures as s } from \"./supports.js\";\nimport { LogService as r } from \"../services/log.service.js\";\nfunction w() {\n  e() && (window.CDS = window.CDS || {\n    _version: [],\n    _react: {\n      version: void 0\n    },\n    _supports: s.supports,\n    _isStateProxied: !1,\n    _state: {\n      focusTrapItems: [],\n      layerElements: [],\n      i18nRegistry: {},\n      elementRegistry: {},\n      iconRegistry: {},\n      motionRegistry: {}\n    },\n    environment: {\n      production: !1\n    },\n    getDetails: a,\n    logDetails: d\n  }, function (_document$querySelect) {\n    const e = \"6.7.0\";\n    window.CDS._version.indexOf(e) < 0 && (window.CDS._version.push(e), (_document$querySelect = document.querySelector(\"body\")) !== null && _document$querySelect !== void 0 && _document$querySelect.setAttribute(\"cds-version\", window.CDS._version.join(\" \"))), window.CDS._version.length > 1 && r.warn(\"Running more than one version of Clarity can cause unexpected issues. Please ensure only one version is loaded.\");\n  }(), window.CDS._isStateProxied || (window.CDS._isStateProxied = !0, window.CDS._state = new Proxy(window.CDS._state, {\n    set: (e, n, o) => {\n      const t = {\n        key: n,\n        prev: window.CDS._state[n],\n        current: o\n      };\n      return e[n] = o, document.dispatchEvent(new CustomEvent(\"CDS_STATE_UPDATE\", {\n        detail: t\n      })), !0;\n    }\n  })));\n}\nfunction a() {\n  return {\n    versions: window.CDS._version,\n    environment: window.CDS.environment,\n    userAgent: navigator.userAgent,\n    supports: window.CDS._supports,\n    angularVersion: n(!1),\n    angularJSVersion: o(!1),\n    reactVersion: t(!1),\n    vueVersion: i(!1),\n    state: {\n      ...window.CDS._state,\n      iconRegistry: Object.keys(window.CDS._state.iconRegistry),\n      motionRegistry: Object.keys(window.CDS._state.motionRegistry),\n      focusTrapRegistry: Object.keys(window.CDS._state.focusTrapItems.map(e => e.focusTrapId))\n    }\n  };\n}\nfunction d() {\n  r.log(JSON.stringify(a(), null, 2));\n}\nexport { w as setupCDSGlobal };\n//# sourceMappingURL=global.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}